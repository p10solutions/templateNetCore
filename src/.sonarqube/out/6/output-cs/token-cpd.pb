¢
DC:\Template\templateNetCore\src\Template.Framework\Api\EMetodoApi.cs
	namespace 	
Template
 
. 
	Framework 
. 
Api  
{ 
public 

enum 

EMetodoApi 
{ 
Get 
, 
Post 
, 
Put 
, 
Delete 
}		 
}

 ë
JC:\Template\templateNetCore\src\Template.Framework\Api\ETipoConteudoApi.cs
	namespace 	
Template
 
. 
	Framework 
. 
Api  
{ 
public 

enum 
ETipoConteudoApi  
{ 
Json 
, 
Xml 
} 
} Ä
DC:\Template\templateNetCore\src\Template.Framework\Api\GatewayAPI.cs
	namespace 	
Template
 
. 
	Framework 
. 
Api  
{		 
public

 

sealed

 
class

 

GatewayAPI

 "
{ 
public 
static 
async 
Task  
<  !
T! "
>" #
Get$ '
<' (
T( )
>) *
(* +
string+ 1
url2 5
,5 6
string7 =
path> B
,B C
objectD J
	parametroK T
)T U
whereV [
T\ ]
:^ _
class` e
{ 	
var 
gatewayRest 
= 
new !
GatewayRestAPI" 0
<0 1
T1 2
>2 3
(3 4
url4 7
,7 8
path9 =
)= >
;> ?
var 
retorno 
= 
await 
gatewayRest  +
.+ ,
	GetSingle, 5
(5 6
	parametro6 ?
)? @
;@ A
return 
retorno 
; 
} 	
public 
static 
async 
Task  
<  !
T! "
>" #
Post$ (
<( )
T) *
>* +
(+ ,
string, 2
url3 6
,6 7
string8 >
path? C
,C D
objectE K
	parametroL U
)U V
whereW \
T] ^
:_ `
classa f
{ 	
var 
client 
= 
new 

HttpClient '
(' (
)( )
;) *
client 
. 
BaseAddress 
=  
new! $
Uri% (
(( )
url) ,
), -
;- .
client 
. !
DefaultRequestHeaders (
.( )
Accept) /
./ 0
Clear0 5
(5 6
)6 7
;7 8
client 
. !
DefaultRequestHeaders (
.( )
Accept) /
./ 0
Add0 3
(3 4
new +
MediaTypeWithQualityHeaderValue 3
(3 4
$str4 F
)F G
)G H
;H I
HttpResponseMessage 
response  (
=) *
await+ 0
client1 7
.7 8
PostAsJsonAsync8 G
(G H
pathH L
,L M
	parametroN W
)W X
;X Y
var 
status 
= 
response !
.! "#
EnsureSuccessStatusCode" 9
(9 :
): ;
;; <
var!! 
objeto!! 
=!! 
await!! 
response!! '
.!!' (
Content!!( /
.!!/ 0
ReadAsAsync!!0 ;
<!!; <
T!!< =
>!!= >
(!!> ?
)!!? @
;!!@ A
return## 
objeto## 
;## 
}$$ 	
}%% 
}&& Ö[
HC:\Template\templateNetCore\src\Template.Framework\Api\GatewayRestAPI.cs
	namespace

 	
Template


 
.

 
	Framework

 
{ 
public 

sealed 
class 
GatewayRestAPI &
<& '
T' (
>( )
where* /
T0 1
:2 3
class4 9
{ 

HttpClient 
client 
; 
public 
string 
Url 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Path 
{ 
get  
;  !
set" %
;% &
}' (
Uri 
locationObject 
; 
public 
GatewayRestAPI 
( 
string $
url% (
,( )
string* 0
path1 5
)5 6
{ 	
Url 
= 
url 
; 
ProcessarPath 
( 
path 
) 
;  
GerarClient 
( 
) 
; 
} 	
void 
ProcessarPath 
( 
string !
path" &
)& '
{ 	
if 
( 
path 
. 
	Substring 
( 
(  
path  $
.$ %
Length% +
-, -
$num. /
)/ 0
)0 1
==2 4
$str5 8
)8 9
path 
+= 
$str 
; 
Path 
= 
path 
; 
}   	
void"" 
GerarClient"" 
("" 
)"" 
{## 	
client$$ 
=$$ 
new$$ 

HttpClient$$ #
($$# $
)$$$ %
;$$% &
client%% 
.%% 
BaseAddress%% 
=%%  
new%%! $
Uri%%% (
(%%( )
Url%%) ,
)%%, -
;%%- .
client&& 
.&& !
DefaultRequestHeaders&& (
.&&( )
Accept&&) /
.&&/ 0
Clear&&0 5
(&&5 6
)&&6 7
;&&7 8
client'' 
.'' !
DefaultRequestHeaders'' (
.''( )
Accept'') /
.''/ 0
Add''0 3
(''3 4
new(( +
MediaTypeWithQualityHeaderValue(( 3
(((3 4
$str((4 F
)((F G
)((G H
;((H I
})) 	
public++ 
async++ 
Task++ 
<++ 
T++ 
>++ 
Get++  
(++  !
string++! '
id++( *
)++* +
{,, 	
T-- 
objeto-- 
=-- 
null-- 
;-- 
HttpResponseMessage// 
response//  (
=//) *
await//+ 0
client//1 7
.//7 8
GetAsync//8 @
(//@ A
$"//B D
{//D E
Path//E I
}//I J
///J K
{//K L
id//L N
}//N O
"//O P
)//P Q
;//Q R
if11 
(11 
response11 
.11 
IsSuccessStatusCode11 ,
)11, -
{22 
objeto33 
=33 
await33 
response33 '
.33' (
Content33( /
.33/ 0
ReadAsAsync330 ;
<33; <
T33< =
>33= >
(33> ?
)33? @
;33@ A
}44 
return66 
objeto66 
;66 
}77 	
public99 
async99 
Task99 
<99 
T99 
>99 
	GetSingle99 &
(99& '
object99' -
	parametro99. 7
)997 8
{:: 	
T;; 
objeto;; 
=;; 
null;; 
;;; 
var== 
strParametro== 
=== 
GerarParametros== .
(==. /
	parametro==/ 8
)==8 9
;==9 :
HttpResponseMessage?? 
response??  (
=??) *
await??+ 0
client??1 7
.??7 8
GetAsync??8 @
(??@ A
$"??A C
{??C D
Path??D H
}??H I
{??I J
strParametro??J V
}??V W
"??W X
)??X Y
;??Y Z
ifAA 
(AA 
responseAA 
.AA 
IsSuccessStatusCodeAA ,
)AA, -
{BB 
objetoCC 
=CC 
awaitCC 
responseCC '
.CC' (
ContentCC( /
.CC/ 0
ReadAsAsyncCC0 ;
<CC; <
TCC< =
>CC= >
(CC> ?
)CC? @
;CC@ A
}DD 
returnFF 
objetoFF 
;FF 
}GG 	
publicII 
asyncII 
TaskII 
<II 
IEnumerableII %
<II% &
TII& '
>II' (
>II( )
GetII* -
(II- .
objectII. 4
	parametroII5 >
=II? @
nullIIA E
)IIE F
{JJ 	
IEnumerableKK 
<KK 
TKK 
>KK 
objetosKK "
=KK# $
nullKK% )
;KK) *
varMM 
strParametroMM 
=MM 
GerarParametrosMM .
(MM. /
	parametroMM/ 8
)MM8 9
;MM9 :
HttpResponseMessageOO 
responseOO  (
=OO) *
awaitOO+ 0
clientOO1 7
.OO7 8
GetAsyncOO8 @
(OO@ A
$"OOA C
{OOC D
PathOOD H
}OOH I
{OOI J
strParametroOOJ V
}OOV W
"OOW X
)OOX Y
;OOY Z
ifQQ 
(QQ 
responseQQ 
.QQ 
IsSuccessStatusCodeQQ ,
)QQ, -
{RR 
objetosSS 
=SS 
awaitSS 
responseSS  (
.SS( )
ContentSS) 0
.SS0 1
ReadAsAsyncSS1 <
<SS< =
IEnumerableSS= H
<SSH I
TSSI J
>SSJ K
>SSK L
(SSL M
)SSM N
;SSN O
}TT 
returnVV 
objetosVV 
;VV 
}WW 	
publicYY 
asyncYY 
TaskYY 
<YY 
IEnumerableYY %
<YY% &
TYY& '
>YY' (
>YY( )
GetYY* -
(YY- .
)YY. /
{ZZ 	
IEnumerable[[ 
<[[ 
T[[ 
>[[ 
objetos[[ "
=[[# $
null[[% )
;[[) *
HttpResponseMessage]] 
response]]  (
=]]) *
await]]+ 0
client]]1 7
.]]7 8
GetAsync]]8 @
(]]@ A
Path]]A E
)]]E F
;]]F G
if__ 
(__ 
response__ 
.__ 
IsSuccessStatusCode__ ,
)__, -
{`` 
objetosaa 
=aa 
awaitaa 
responseaa  (
.aa( )
Contentaa) 0
.aa0 1
ReadAsAsyncaa1 <
<aa< =
IEnumerableaa= H
<aaH I
TaaI J
>aaJ K
>aaK L
(aaL M
)aaM N
;aaN O
}bb 
returndd 
objetosdd 
;dd 
}ee 	
publicgg 
asyncgg 
Taskgg 
<gg 
Tgg 
>gg 
Postgg !
(gg! "
Tgg" #
objetogg$ *
)gg* +
{hh 	
HttpResponseMessageii 
responseii  (
=ii) *
awaitii+ 0
clientii1 7
.ii7 8
PostAsJsonAsyncii8 G
(iiG H
Pathjj 
,jj 
objetojj 
)jj 
;jj 
responsell 
.ll #
EnsureSuccessStatusCodell ,
(ll, -
)ll- .
;ll. /
locationObjectnn 
=nn 
responsenn %
.nn% &
Headersnn& -
.nn- .
Locationnn. 6
;nn6 7
objetopp 
=pp 
awaitpp 
responsepp #
.pp# $
Contentpp$ +
.pp+ ,
ReadAsAsyncpp, 7
<pp7 8
Tpp8 9
>pp9 :
(pp: ;
)pp; <
;pp< =
returnrr 
objetorr 
;rr 
}ss 	
publicuu 
asyncuu 
Taskuu 
<uu 
Tuu 
>uu 
Putuu  
(uu  !
Tuu! "
objetouu# )
,uu) *
stringuu+ 1
iduu2 4
)uu4 5
{vv 	
HttpResponseMessageww 
responseww  (
=ww) *
awaitww+ 0
clientww1 7
.ww7 8
PutAsJsonAsyncww8 F
(wwF G
Pathyy 
+yy 
$"yy 
/yy 
{yy 
idyy 
}yy 
"yy 
,yy 
objetoyy #
)yy# $
;yy$ %
response{{ 
.{{ #
EnsureSuccessStatusCode{{ ,
({{, -
){{- .
;{{. /
objeto}} 
=}} 
await}} 
response}} #
.}}# $
Content}}$ +
.}}+ ,
ReadAsAsync}}, 7
<}}7 8
T}}8 9
>}}9 :
(}}: ;
)}}; <
;}}< =
return 
objeto 
; 
}
 	
public
 
async
 
Task
 
<
 
HttpStatusCode
 (
>
( )
Delete
* 0
(
0 1
string
1 7
id
8 :
)
: ;
{
 	!
HttpResponseMessage
 
response
  (
=
) *
await
+ 0
client
1 7
.
7 8
DeleteAsync
8 C
(
C D
Path
 
+
 
$"
 
/
 
{
 
id
 
}
 
"
 
)
 
;
 
return
 
response
 
.
 

StatusCode
 &
;
& '
}
 	
string
 
GerarParametros
 
(
 
object
 %
	parametro
& /
)
/ 0
{
 	
var
 

parametros
 
=
 
$str
 
;
  
var
 

concatenar
 
=
 
$str
  
;
  !
foreach
 
(
 
var
 
param
 
in
 !
	parametro
" +
.
+ ,
GetType
, 3
(
3 4
)
4 5
.
5 6
GetProperties
6 C
(
C D
)
D E
)
E F
{
 

parametros
 
=
 
$"
 
{
  

parametros
  *
}
* +
{
+ ,

concatenar
, 6
}
6 7
{
7 8
param
8 =
.
= >
Name
> B
}
B C
=
C D
{
D E
param
E J
.
J K
GetValue
K S
(
S T
	parametro
T ]
)
] ^
}
^ _
"
_ `
;
` a
if
 
(
 

concatenar
 
==
 !
$str
" %
)
% &

concatenar
 
=
  
$str
! $
;
$ %
}
 
return
 

parametros
 
;
 
}
 	
}
 
} S
GC:\Template\templateNetCore\src\Template.Framework\Api\IntegradorApi.cs
	namespace 	
Template
 
. 
	Framework 
. 
Api  
{ 
public 

sealed 
class 
IntegradorApi %
{ 
public		 
static		 
void		 
Envia		  
(		  !
object		! '
objeto		( .
,		. /
string		0 6
url		7 :
,		: ;
ETipoConteudoApi		< L
tipoConteudo		M Y
=		Z [
ETipoConteudoApi		\ l
.		l m
Json		m q
,		q r

EMetodoApi		s }
metodo			~ 
=
		 

EMetodoApi
		 
.
		 
Post
		 
,
		 
int
		 
?
		 
timeOut
		 ¤
=
		¥ ¦
null
		§ «
)
		« ¬
{

 	
var 

Requisicao 
= 
GeraRequisicao +
(+ ,
url, /
,/ 0
tipoConteudo1 =
,= >
metodo? E
,E F
timeOutG N
)N O
;O P
AdicionaDadosEnvio 
( 

Requisicao )
,) *
objeto+ 1
)1 2
;2 3
} 	
public 
static 
T &
RecebeRetornoDeserializado 2
<2 3
T3 4
>4 5
(5 6
string6 <
url= @
,@ A
objectB H

dadosEnvioI S
=T U
nullV Z
,Z [
ETipoConteudoApi\ l
tipoConteudom y
=z {
ETipoConteudoApi	| 
.
 
Json
 
,
 

EMetodoApi
 
metodo
 ¤
=
¥ ¦

EMetodoApi
§ ±
.
± ²
Get
² µ
,
µ ¶
int
· º
?
º »
timeOut
¼ Ã
=
Ä Å
null
Æ Ê
)
Ê Ë
{ 	
var 
retorno 
= $
RecebeRetornoSerializado 2
(2 3
url3 6
,6 7

dadosEnvio8 B
,B C
tipoConteudoD P
,P Q
metodoR X
,X Y
timeOutZ a
)a b
;b c
return 
Deserializa 
< 
T  
>  !
(! "
retorno" )
,) *
tipoConteudo+ 7
)7 8
;8 9
} 	
public 
static 
string $
RecebeRetornoSerializado 5
(5 6
string6 <
url= @
,@ A
objectB H

dadosEnvioI S
=T U
nullV Z
,Z [
ETipoConteudoApi\ l
tipoConteudom y
=z {
ETipoConteudoApi	| 
.
 
Json
 
,
 

EMetodoApi
 
metodo
 ¤
=
¥ ¦

EMetodoApi
§ ±
.
± ²
Get
² µ
,
µ ¶
int
· º
?
º »
timeOut
¼ Ã
=
Ä Å
null
Æ Ê
)
Ê Ë
{ 	
if 
( 
metodo 
== 

EMetodoApi $
.$ %
Get% (
&&) +

dadosEnvio, 6
!=7 9
null: >
)> ?
{ 
foreach 
( 
var 
propriedade (
in) +

dadosEnvio, 6
.6 7
GetType7 >
(> ?
)? @
.@ A
GetPropertiesA N
(N O
)O P
)P Q
{ 
var 
caracterJuncao &
=' (
$str) ,
;, -
caracterJuncao "
=# $
url% (
.( )
Contains) 1
(1 2
caracterJuncao2 @
)@ A
?B C
$strD G
:H I
caracterJuncaoJ X
;X Y
url 
+= 
string !
.! "
Format" (
(( )
$str) 5
,5 6
caracterJuncao7 E
,E F
propriedadeG R
.R S
NameS W
,W X
propriedadeY d
.d e
GetValuee m
(m n

dadosEnvion x
)x y
)y z
;z {
} 
}   
var"" 

Requisicao"" 
="" 
GeraRequisicao"" +
(""+ ,
url"", /
,""/ 0
tipoConteudo""1 =
,""= >
metodo""? E
,""E F
timeOut""G N
)""N O
;""O P
if$$ 
($$ 
metodo$$ 
!=$$ 

EMetodoApi$$ $
.$$$ %
Get$$% (
&&$$) +

dadosEnvio$$, 6
!=$$7 9
null$$: >
)$$> ?
AdicionaDadosEnvio%% "
(%%" #

Requisicao%%# -
,%%- .

dadosEnvio%%/ 9
)%%9 :
;%%: ;
else&& 

Requisicao'' 
.'' 
ContentLength'' (
='') *
$num''+ ,
;'', -
return)) 
ObterResultado)) !
())! "

Requisicao))" ,
))), -
;))- .
}** 	
static,, 
string,, 
ObterResultado,, $
(,,$ %
HttpWebRequest,,% 3

requisicao,,4 >
),,> ?
{-- 	
using.. 
(.. 
var.. 
streamReader.. #
=..$ %
new..& )
StreamReader..* 6
(..6 7

requisicao..7 A
...A B
GetResponse..B M
(..M N
)..N O
...O P
GetResponseStream..P a
(..a b
)..b c
)..c d
)..d e
{// 
return00 
streamReader00 #
.00# $
	ReadToEnd00$ -
(00- .
)00. /
;00/ 0
}11 
}22 	
static44 
HttpWebRequest44 
GeraRequisicao44 ,
(44, -
string44- 3
url444 7
,447 8
ETipoConteudoApi449 I
tipoConteudo44J V
,44V W

EMetodoApi44X b
metodo44c i
,44i j
int44k n
?44n o
timeOut44p w
)44w x
{55 	
var66 

Requisicao66 
=66 
(66 
HttpWebRequest66 ,
)66, -

WebRequest66- 7
.667 8
Create668 >
(66> ?
url66? B
)66B C
;66C D

Requisicao77 
.77 
ContentType77 "
=77# $
ObterTipoConteudo77% 6
(776 7
tipoConteudo777 C
)77C D
;77D E

Requisicao88 
.88 
Timeout88 
=88  
timeOut88! (
??88) +

Requisicao88, 6
.886 7
Timeout887 >
;88> ?

Requisicao99 
.99 
Method99 
=99 
metodo99  &
.99& '
ToString99' /
(99/ 0
)990 1
.991 2
ToUpper992 9
(999 :
)99: ;
;99; <
return:: 

Requisicao:: 
;:: 
};; 	
static== 
void== 
AdicionaDadosEnvio== &
(==& '
HttpWebRequest==' 5

requisicao==6 @
,==@ A
object==B H

dadosEnvio==I S
,==S T
ETipoConteudoApi==U e
tipoConteudo==f r
===s t
ETipoConteudoApi	==u 
.
== 
Json
== 
)
== 
{>> 	
using?? 
(?? 
var?? 
streamWriter?? #
=??$ %
new??& )
StreamWriter??* 6
(??6 7

requisicao??7 A
.??A B
GetRequestStream??B R
(??R S
)??S T
)??T U
)??U V
{@@ 
streamWriterAA 
.AA 
WriteAA "
(AA" #
	SerializaAA# ,
(AA, -

dadosEnvioAA- 7
,AA7 8
tipoConteudoAA9 E
)AAE F
)AAF G
;AAG H
}BB 
}CC 	
staticEE 
stringEE 
	SerializaEE 
(EE  
objectEE  &
objetoEE' -
,EE- .
ETipoConteudoApiEE/ ?
tipoConteudoEE@ L
)EEL M
{FF 	
switchGG 
(GG 
tipoConteudoGG  
)GG  !
{HH 
caseII 
ETipoConteudoApiII %
.II% &
JsonII& *
:II* +
returnJJ 
SerializadorJJ '
.JJ' (
SerializaJsonJJ( 5
(JJ5 6
objetoJJ6 <
)JJ< =
;JJ= >
caseKK 
ETipoConteudoApiKK %
.KK% &
XmlKK& )
:KK) *
returnLL 
SerializadorLL '
.LL' (
SerializaXmlLL( 4
(LL4 5
objetoLL5 ;
)LL; <
;LL< =
defaultMM 
:MM 
throwNN 
newNN  
ApplicationExceptionNN 2
(NN2 3
$strNN3 V
)NNV W
;NNW X
}OO 
}PP 	
staticRR 
TRR 
DeserializaRR 
<RR 
TRR 
>RR 
(RR  
stringRR  &
valorRR' ,
,RR, -
ETipoConteudoApiRR. >
tipoConteudoRR? K
)RRK L
{SS 	
switchTT 
(TT 
tipoConteudoTT  
)TT  !
{UU 
caseVV 
ETipoConteudoApiVV %
.VV% &
JsonVV& *
:VV* +
returnWW 
SerializadorWW '
.WW' (
DeserializaJsonWW( 7
<WW7 8
TWW8 9
>WW9 :
(WW: ;
valorWW; @
)WW@ A
;WWA B
}XX 
throwZZ 
newZZ #
NotImplementedExceptionZZ -
(ZZ- .
$strZZ. O
)ZZO P
;ZZP Q
}[[ 	
static]] 
string]] 
ObterTipoConteudo]] '
(]]' (
ETipoConteudoApi]]( 8
tipoConteudo]]9 E
)]]E F
{^^ 	
return__ 
string__ 
.__ 
Format__  
(__  !
$str__! 2
,__2 3
tipoConteudo__4 @
.__@ A
ToString__A I
(__I J
)__J K
.__K L
ToLower__L S
(__S T
)__T U
)__U V
;__V W
}`` 	
}aa 
}bb Ñ"
DC:\Template\templateNetCore\src\Template.Framework\Data\Paginacao.cs
	namespace 	
Template
 
. 
	Framework 
{ 
public 

class 
	Paginacao 
{ 
public		 
	Paginacao		 
(		 
)		 
{

 	
} 	
public 
int 
draw 
{ 
get 
; 
set "
;" #
}$ %
public 
int 
start 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
length 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
count 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Sort 
{ 
get  
;  !
set" %
;% &
}' (
public   
string   
Search   
{   
get   "
;  " #
set  $ '
;  ' (
}  ) *
public"" 
string"" 
SearchLower"" !
{""" #
get""$ '
{""( )
return""* 0
string""1 7
.""7 8
IsNullOrEmpty""8 E
(""E F
Search""F L
)""L M
?""N O
null""P T
:""U V
Search""W ]
.""] ^
ToLower""^ e
(""e f
)""f g
;""g h
}""i j
}""k l
public$$ 
object$$ 
ObjetoLimpo$$ !
{%% 	
get&& 
=>&& 
new&& 
{&& 
draw&& 
=&& 
draw&&  $
,&&$ %
start&&& +
=&&, -
start&&. 3
,&&3 4
length&&5 ;
=&&< =
length&&> D
,&&D E
count&&F K
=&&L M
count&&N S
,&&S T
Sort&&U Y
=&&Z [
Sort&&\ `
,&&` a
Search&&b h
=&&i j
Search&&k q
}&&r s
;&&s t
}'' 	
public)) 
static)) 
PaginacaoNull)) #
PaginacaoNULL))$ 1
{** 	
get++ 
{,, 
return-- 
new-- 
PaginacaoNull-- (
(--( )
)--) *
;--* +
}.. 
}// 	
public11 
virtual11 
void11 %
MapeiaRequisicaoDataTable11 5
(115 6
HttpRequest116 A
request11B I
)11I J
{22 	
var33 
campos33 
=33 
request33  
.33  !
Form33! %
.33% &
ToDictionary33& 2
(332 3
x333 4
=>335 7
x338 9
.339 :
Key33: =
,33= >
x33? @
=>33A C
x33D E
.33E F
Value33F K
.33K L
ToString33L T
(33T U
)33U V
)33V W
;33W X
if55 
(55 
!55 
campos55 
.55 
Keys55 
.55 
Contains55 %
(55% &
$str55& 8
)558 9
)559 :
return66 
;66 
var88 

sortColumn88 
=88 
campos88 #
[88# $
$str88$ .
+88/ 0
campos881 7
[887 8
$str888 J
]88J K
.88K L
FirstOrDefault88L Z
(88Z [
)88[ \
+88] ^
$str88_ h
]88h i
;88i j
var99 
sortColumnDir99 
=99 
campos99  &
[99& '
$str99' 6
]996 7
;997 8
Search;; 
=;; 
campos;; 
[;; 
$str;; +
];;+ ,
;;;, -
Sort== 
=== 
!== 
string== 
.== 
IsNullOrEmpty== (
(==( )

sortColumn==) 3
)==3 4
?==5 6
string==7 =
.=== >
Format==> D
(==D E
$str==E N
,==N O

sortColumn==P Z
,==Z [
sortColumnDir==\ i
)==i j
:==k l
null==m q
;==q r
}>> 	
}?? 
}@@ 
HC:\Template\templateNetCore\src\Template.Framework\Data\PaginacaoNull.cs
	namespace 	
Template
 
. 
	Framework 
{		 
public

 

class

 
PaginacaoNull

 
:

 
	Paginacao

  )
{ 
public 
override 
void %
MapeiaRequisicaoDataTable 6
(6 7
HttpRequest7 B
requestC J
)J K
{ 	
} 	
} 
} 
MC:\Template\templateNetCore\src\Template.Framework\Data\PaginacaoOrdenacao.cs
	namespace 	
Template
 
. 
	Framework 
. 
Utils "
{ 
public 

class 
PaginacaoOrdenacao #
{ 
public 

IQueryable %
AplicarPaginacaoDataTable 3
(3 4

IQueryable4 >
query? D
,D E
	PaginacaoF O
	paginacaoP Y
)Y Z
{		 	
if

 
(

 
typeof

 
(

 
PaginacaoNull

 $
)

$ %
==

& (
	paginacao

) 2
.

2 3
GetType

3 :
(

: ;
)

; <
)

< =
return 
query 
; 
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
	paginacao& /
./ 0
Sort0 4
)4 5
)5 6
query 
= 
query 
. 
OrderBy %
(% &
	paginacao& /
./ 0
Sort0 4
)4 5
;5 6
query 
= 
query 
. 
Skip 
( 
	paginacao (
.( )
start) .
). /
./ 0
Take0 4
(4 5
	paginacao5 >
.> ?
length? E
)E F
;F G
return 
query 
; 
} 	
public 
static 

IQueryable  
<  !
T! "
>" #
AplicarPaginacao$ 4
<4 5
T5 6
>6 7
(7 8

IQueryable8 B
queryC H
,H I
	PaginacaoJ S
	paginacaoT ]
)] ^
{ 	
return 
( 

IQueryable 
< 
T  
>  !
)! "
new" %
PaginacaoOrdenacao& 8
(8 9
)9 :
.: ;%
AplicarPaginacaoDataTable; T
(T U
queryU Z
,Z [
	paginacao\ e
)e f
;f g
} 	
} 
} Æ
BC:\Template\templateNetCore\src\Template.Framework\Serializador.cs
	namespace 	
Template
 
. 
	Framework 
{ 
public 

sealed 
class 
Serializador $
{ 
public		 
static		 
string		 
SerializaXml		 )
(		) *
object		* 0
objeto		1 7
)		7 8
{

 	
XmlSerializer 
xmlSerializer '
=( )
new* -
XmlSerializer. ;
(; <
objeto< B
.B C
GetTypeC J
(J K
)K L
)L M
;M N
using 
( 
var 
stringWriter #
=$ %
new& )
StringWriter* 6
(6 7
)7 8
)8 9
{ 
xmlSerializer 
. 
	Serialize '
(' (
stringWriter( 4
,4 5
objeto6 <
)< =
;= >
return 
stringWriter #
.# $
ToString$ ,
(, -
)- .
;. /
} 
} 	
public 
static 
string 
SerializaJson *
(* +
object+ 1
objeto2 8
)8 9
{ 	
return 
JsonConvert 
. 
SerializeObject .
( 
objeto 
, 
new "
JsonSerializerSettings .
(. /
)/ 0
{ !
ReferenceLoopHandling -
=. /!
ReferenceLoopHandling0 E
.E F
IgnoreF L
} 
) 
; 
} 	
public   
static   
T   
DeserializaJson   '
<  ' (
T  ( )
>  ) *
(  * +
string  + 1
valor  2 7
)  7 8
{!! 	
return"" 
JsonConvert"" 
."" 
DeserializeObject"" 0
<""0 1
T""1 2
>""2 3
(""3 4
valor""4 9
)""9 :
;"": ;
}## 	
}$$ 
}%% ²
KC:\Template\templateNetCore\src\Template.Framework\UI\DataTablesResponse.cs
	namespace 	
Template
 
. 
	Framework 
{ 
public 

class 
DataTablesResponse #
{ 
public 
int 
draw 
{ 
get 
; 
private &
set' *
;* +
}, -
public 
IEnumerable 
data 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public		 
int		 
recordsTotal		 
{		  !
get		" %
;		% &
private		' .
set		/ 2
;		2 3
}		4 5
public

 
int

 
recordsFiltered

 "
{

# $
get

% (
;

( )
private

* 1
set

2 5
;

5 6
}

7 8
public 
DataTablesResponse !
(! "
int" %
draw& *
,* +
IEnumerable, 7
data8 <
,< =
int> A
recordsFilteredB Q
,Q R
intS V
recordsTotalW c
)c d
{ 	
this 
. 
draw 
= 
draw 
; 
this 
. 
data 
= 
data 
; 
this 
. 
recordsFiltered  
=! "
recordsFiltered# 2
;2 3
this 
. 
recordsTotal 
= 
recordsTotal  ,
;, -
} 	
public 
static 
DataTablesResponse (
Reposta) 0
(0 1
	Paginacao1 :
	paginacao; D
,D E
IEnumerableF Q
dataR V
)V W
{ 	
return 
new 
DataTablesResponse )
() *
	paginacao* 3
.3 4
draw4 8
,8 9
data: >
,> ?
	paginacao@ I
.I J
countJ O
,O P
	paginacaoQ Z
.Z [
count[ `
)` a
;a b
} 	
} 
} 